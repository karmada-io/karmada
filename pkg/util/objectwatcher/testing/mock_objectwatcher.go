// Code generated by MockGen. DO NOT EDIT.
// Source: objectwatcher.go

// Package testing is a generated GoMock package.
package testing

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// MockObjectWatcher is a mock of ObjectWatcher interface.
type MockObjectWatcher struct {
	ctrl     *gomock.Controller
	recorder *MockObjectWatcherMockRecorder
}

// MockObjectWatcherMockRecorder is the mock recorder for MockObjectWatcher.
type MockObjectWatcherMockRecorder struct {
	mock *MockObjectWatcher
}

// NewMockObjectWatcher creates a new mock instance.
func NewMockObjectWatcher(ctrl *gomock.Controller) *MockObjectWatcher {
	mock := &MockObjectWatcher{ctrl: ctrl}
	mock.recorder = &MockObjectWatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObjectWatcher) EXPECT() *MockObjectWatcherMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockObjectWatcher) Create(clusterName string, desireObj *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", clusterName, desireObj)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockObjectWatcherMockRecorder) Create(clusterName, desireObj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockObjectWatcher)(nil).Create), clusterName, desireObj)
}

// Delete mocks base method.
func (m *MockObjectWatcher) Delete(clusterName string, desireObj *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", clusterName, desireObj)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockObjectWatcherMockRecorder) Delete(clusterName, desireObj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockObjectWatcher)(nil).Delete), clusterName, desireObj)
}

// NeedsUpdate mocks base method.
func (m *MockObjectWatcher) NeedsUpdate(clusterName string, desiredObj, clusterObj *unstructured.Unstructured) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NeedsUpdate", clusterName, desiredObj, clusterObj)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NeedsUpdate indicates an expected call of NeedsUpdate.
func (mr *MockObjectWatcherMockRecorder) NeedsUpdate(clusterName, desiredObj, clusterObj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NeedsUpdate", reflect.TypeOf((*MockObjectWatcher)(nil).NeedsUpdate), clusterName, desiredObj, clusterObj)
}

// Update mocks base method.
func (m *MockObjectWatcher) Update(clusterName string, desireObj, clusterObj *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", clusterName, desireObj, clusterObj)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockObjectWatcherMockRecorder) Update(clusterName, desireObj, clusterObj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockObjectWatcher)(nil).Update), clusterName, desireObj, clusterObj)
}
