/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// WorkSpecApplyConfiguration represents a declarative configuration of the WorkSpec type for use
// with apply.
type WorkSpecApplyConfiguration struct {
	Workload                    *WorkloadTemplateApplyConfiguration `json:"workload,omitempty"`
	SuspendDispatching          *bool                               `json:"suspendDispatching,omitempty"`
	PreserveResourcesOnDeletion *bool                               `json:"preserveResourcesOnDeletion,omitempty"`
}

// WorkSpecApplyConfiguration constructs a declarative configuration of the WorkSpec type for use with
// apply.
func WorkSpec() *WorkSpecApplyConfiguration {
	return &WorkSpecApplyConfiguration{}
}

// WithWorkload sets the Workload field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Workload field is set to the value of the last call.
func (b *WorkSpecApplyConfiguration) WithWorkload(value *WorkloadTemplateApplyConfiguration) *WorkSpecApplyConfiguration {
	b.Workload = value
	return b
}

// WithSuspendDispatching sets the SuspendDispatching field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SuspendDispatching field is set to the value of the last call.
func (b *WorkSpecApplyConfiguration) WithSuspendDispatching(value bool) *WorkSpecApplyConfiguration {
	b.SuspendDispatching = &value
	return b
}

// WithPreserveResourcesOnDeletion sets the PreserveResourcesOnDeletion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PreserveResourcesOnDeletion field is set to the value of the last call.
func (b *WorkSpecApplyConfiguration) WithPreserveResourcesOnDeletion(value bool) *WorkSpecApplyConfiguration {
	b.PreserveResourcesOnDeletion = &value
	return b
}
