/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// AggregatedStatusItemApplyConfiguration represents a declarative configuration of the AggregatedStatusItem type for use
// with apply.
type AggregatedStatusItemApplyConfiguration struct {
	ClusterName    *string               `json:"clusterName,omitempty"`
	Status         *runtime.RawExtension `json:"status,omitempty"`
	Applied        *bool                 `json:"applied,omitempty"`
	AppliedMessage *string               `json:"appliedMessage,omitempty"`
}

// AggregatedStatusItemApplyConfiguration constructs a declarative configuration of the AggregatedStatusItem type for use with
// apply.
func AggregatedStatusItem() *AggregatedStatusItemApplyConfiguration {
	return &AggregatedStatusItemApplyConfiguration{}
}

// WithClusterName sets the ClusterName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterName field is set to the value of the last call.
func (b *AggregatedStatusItemApplyConfiguration) WithClusterName(value string) *AggregatedStatusItemApplyConfiguration {
	b.ClusterName = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *AggregatedStatusItemApplyConfiguration) WithStatus(value runtime.RawExtension) *AggregatedStatusItemApplyConfiguration {
	b.Status = &value
	return b
}

// WithApplied sets the Applied field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Applied field is set to the value of the last call.
func (b *AggregatedStatusItemApplyConfiguration) WithApplied(value bool) *AggregatedStatusItemApplyConfiguration {
	b.Applied = &value
	return b
}

// WithAppliedMessage sets the AppliedMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AppliedMessage field is set to the value of the last call.
func (b *AggregatedStatusItemApplyConfiguration) WithAppliedMessage(value string) *AggregatedStatusItemApplyConfiguration {
	b.AppliedMessage = &value
	return b
}
