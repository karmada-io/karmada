// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/karmada-io/karmada/pkg/apis/policy/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReplicaSchedulingPolicyLister helps list ReplicaSchedulingPolicies.
// All objects returned here must be treated as read-only.
type ReplicaSchedulingPolicyLister interface {
	// List lists all ReplicaSchedulingPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReplicaSchedulingPolicy, err error)
	// ReplicaSchedulingPolicies returns an object that can list and get ReplicaSchedulingPolicies.
	ReplicaSchedulingPolicies(namespace string) ReplicaSchedulingPolicyNamespaceLister
	ReplicaSchedulingPolicyListerExpansion
}

// replicaSchedulingPolicyLister implements the ReplicaSchedulingPolicyLister interface.
type replicaSchedulingPolicyLister struct {
	indexer cache.Indexer
}

// NewReplicaSchedulingPolicyLister returns a new ReplicaSchedulingPolicyLister.
func NewReplicaSchedulingPolicyLister(indexer cache.Indexer) ReplicaSchedulingPolicyLister {
	return &replicaSchedulingPolicyLister{indexer: indexer}
}

// List lists all ReplicaSchedulingPolicies in the indexer.
func (s *replicaSchedulingPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.ReplicaSchedulingPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReplicaSchedulingPolicy))
	})
	return ret, err
}

// ReplicaSchedulingPolicies returns an object that can list and get ReplicaSchedulingPolicies.
func (s *replicaSchedulingPolicyLister) ReplicaSchedulingPolicies(namespace string) ReplicaSchedulingPolicyNamespaceLister {
	return replicaSchedulingPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReplicaSchedulingPolicyNamespaceLister helps list and get ReplicaSchedulingPolicies.
// All objects returned here must be treated as read-only.
type ReplicaSchedulingPolicyNamespaceLister interface {
	// List lists all ReplicaSchedulingPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReplicaSchedulingPolicy, err error)
	// Get retrieves the ReplicaSchedulingPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ReplicaSchedulingPolicy, error)
	ReplicaSchedulingPolicyNamespaceListerExpansion
}

// replicaSchedulingPolicyNamespaceLister implements the ReplicaSchedulingPolicyNamespaceLister
// interface.
type replicaSchedulingPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReplicaSchedulingPolicies in the indexer for a given namespace.
func (s replicaSchedulingPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReplicaSchedulingPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReplicaSchedulingPolicy))
	})
	return ret, err
}

// Get retrieves the ReplicaSchedulingPolicy from the indexer for a given namespace and name.
func (s replicaSchedulingPolicyNamespaceLister) Get(name string) (*v1alpha1.ReplicaSchedulingPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("replicaschedulingpolicy"), name)
	}
	return obj.(*v1alpha1.ReplicaSchedulingPolicy), nil
}
