// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/karmada-io/karmada/pkg/apis/policy/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PropagationWorkLister helps list PropagationWorks.
// All objects returned here must be treated as read-only.
type PropagationWorkLister interface {
	// List lists all PropagationWorks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PropagationWork, err error)
	// PropagationWorks returns an object that can list and get PropagationWorks.
	PropagationWorks(namespace string) PropagationWorkNamespaceLister
	PropagationWorkListerExpansion
}

// propagationWorkLister implements the PropagationWorkLister interface.
type propagationWorkLister struct {
	indexer cache.Indexer
}

// NewPropagationWorkLister returns a new PropagationWorkLister.
func NewPropagationWorkLister(indexer cache.Indexer) PropagationWorkLister {
	return &propagationWorkLister{indexer: indexer}
}

// List lists all PropagationWorks in the indexer.
func (s *propagationWorkLister) List(selector labels.Selector) (ret []*v1alpha1.PropagationWork, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PropagationWork))
	})
	return ret, err
}

// PropagationWorks returns an object that can list and get PropagationWorks.
func (s *propagationWorkLister) PropagationWorks(namespace string) PropagationWorkNamespaceLister {
	return propagationWorkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PropagationWorkNamespaceLister helps list and get PropagationWorks.
// All objects returned here must be treated as read-only.
type PropagationWorkNamespaceLister interface {
	// List lists all PropagationWorks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PropagationWork, err error)
	// Get retrieves the PropagationWork from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PropagationWork, error)
	PropagationWorkNamespaceListerExpansion
}

// propagationWorkNamespaceLister implements the PropagationWorkNamespaceLister
// interface.
type propagationWorkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PropagationWorks in the indexer for a given namespace.
func (s propagationWorkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PropagationWork, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PropagationWork))
	})
	return ret, err
}

// Get retrieves the PropagationWork from the indexer for a given namespace and name.
func (s propagationWorkNamespaceLister) Get(name string) (*v1alpha1.PropagationWork, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("propagationwork"), name)
	}
	return obj.(*v1alpha1.PropagationWork), nil
}
