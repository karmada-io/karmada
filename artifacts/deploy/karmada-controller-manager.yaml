apiVersion: apps/v1
kind: Deployment
metadata:
  name: karmada-controller-manager
  namespace: karmada-system
  labels:
    app: karmada-controller-manager
spec:
  replicas: 2
  selector:
    matchLabels:
      app: karmada-controller-manager
  template:
    metadata:
      labels:
        app: karmada-controller-manager
    spec:
      automountServiceAccountToken: false
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
      containers:
        - name: karmada-controller-manager
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          image: docker.io/karmada/karmada-controller-manager:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
            - /bin/karmada-controller-manager
            - --kubeconfig=/etc/karmada/config/karmada.config
            - --cluster-status-update-frequency=10s
            - --failover-eviction-timeout=30s
            - --controllers=*,hpaScaleTargetMarker,deploymentReplicasSyncer
            - --feature-gates=AllAlpha=true,AllBeta=true
            - --metrics-bind-address=$(POD_IP):8080
            - --health-probe-bind-address=$(POD_IP):10357
            - --enable-no-execute-taint-eviction=true
            - --logging-format=json
            - --v=4
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10357
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
          volumeMounts:
          - name: karmada-config
            mountPath: /etc/karmada/config
      volumes:
        - name: karmada-config
          secret:
            secretName: karmada-controller-manager-config
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      priorityClassName: system-node-critical
