# validate any chart changes under charts directory
name: Chart Lint

env:
  HELM_VERSION: v3.11.2
  KUSTOMIZE_VERSION: 5.4.3
  KIND_VERSION: v0.22.0
  KIND_NODE_IMAGE: kindest/node:v1.29.0
  K8S_VERSION: v1.29.0

on:
  push:
    # Exclude branches created by Dependabot to avoid triggering current workflow
    # for PRs initiated by Dependabot.
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    paths:
      - "charts/**"

permissions:
  contents: read

jobs:
  chart-lint-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Set up Kustomize
        uses: syntaqx/setup-kustomize@v1
        with:
          kustomize-version: ${{ env.KUSTOMIZE_VERSION }}

      - name: Run chart-testing (template)
        run: |
          cat <<EOF > post-render.sh
          #!/bin/sh
          # save helm stdout to file, kustomize will read this
          cat > all.yaml
          kustomize build
          EOF

          chmod +x post-render.sh

          cat <<EOF > kustomization.yaml
          resources:
            - all.yaml
          EOF

          helm template --set components={"search,descheduler,schedulerEstimator"} --dependency-update ./charts/karmada \
            --post-renderer ./post-render.sh --debug > /dev/null
          helm template --set components={"search,descheduler,schedulerEstimator"},certs.mode=custom --dependency-update \
            ./charts/karmada --post-renderer ./post-render.sh --debug > /dev/null
          helm template --set components={"search,descheduler,schedulerEstimator"},installMode=component --dependency-update \
            ./charts/karmada --post-renderer ./post-render.sh --debug > /dev/null
          helm template --set installMode=agent --dependency-update ./charts/karmada --post-renderer ./post-render.sh --debug > /dev/null
          helm template --dependency-update ./charts/karmada-operator --post-renderer ./post-render.sh --debug > /dev/null

          rm post-render.sh all.yaml kustomization.yaml

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$( ct list-changed )
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --debug --check-version-increment=false

      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          wait: 120s
          version: ${{ env.KIND_VERSION }}
          node_image: ${{ env.KIND_NODE_IMAGE }}
          kubectl_version: ${{ env.K8S_VERSION }}

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --debug --helm-extra-args "--timeout 800s"
