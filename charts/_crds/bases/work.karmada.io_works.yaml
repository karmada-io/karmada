---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: works.work.karmada.io
spec:
  group: work.karmada.io
  names:
    kind: Work
    listKind: WorkList
    plural: works
    singular: work
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Applied")].status
      name: Applied
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Work defines a list of resources to be deployed on the member
          cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec represents the desired behavior of Work.
            properties:
              workload:
                description: Workload represents the manifest workload to be deployed
                  on managed cluster.
                properties:
                  manifests:
                    description: Manifests represents a list of Kubernetes resources
                      to be deployed on the managed cluster.
                    items:
                      description: Manifest represents a resource to be deployed on
                        managed cluster.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
            type: object
          status:
            description: Status represents the status of PropagationStatus.
            properties:
              conditions:
                description: 'Conditions contain the different condition statuses
                  for this work. Valid condition types are: 1. Applied represents
                  workload in Work is applied successfully on a managed cluster. 2.
                  Progressing represents workload in Work is being applied on a managed
                  cluster. 3. Available represents workload in Work exists on the
                  managed cluster. 4. Degraded represents the current state of workload
                  does not match the desired state for a certain period.'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              manifestStatuses:
                description: ManifestStatuses contains running status of manifests
                  in spec.
                items:
                  description: ManifestStatus contains running status of a specific
                    manifest in spec.
                  properties:
                    identifier:
                      description: Identifier represents the identity of a resource
                        linking to manifests in spec.
                      properties:
                        group:
                          description: Group is the group of the resource.
                          type: string
                        kind:
                          description: Kind is the kind of the resource.
                          type: string
                        name:
                          description: Name is the name of the resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the resource,
                            the resource is cluster scoped if the value is empty
                          type: string
                        ordinal:
                          description: Ordinal represents an index in manifests list,
                            so the condition can still be linked to a manifest even
                            though manifest cannot be parsed successfully.
                          type: integer
                        resource:
                          description: Resource is the resource type of the resource
                          type: string
                        version:
                          description: Version is the version of the resource.
                          type: string
                      required:
                      - kind
                      - name
                      - ordinal
                      - resource
                      - version
                      type: object
                    status:
                      description: Status reflects running status of current manifest.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - identifier
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
