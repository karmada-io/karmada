{{- $name := include "karmada.name" . -}}

{{- if eq .Values.installMode "host" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $name }}-kube-controller-manager
  namespace: {{ include "karmada.namespace" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-kube-controller-manager
  namespace: {{ include "karmada.namespace" . }}
  labels:
  {{- include "karmada.kube-cm.labels" . | nindent 4}}
spec:
  replicas: {{ .Values.kubeControllerManager.replicaCount }}
  selector:
    matchLabels:
      {{- include "karmada.kube-cm.labels" . | nindent 6}}
  {{- with .Values.kubeControllerManager.strategy }}
  strategy:
  {{- toYaml . | nindent 8 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.kubeControllerManager.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "karmada.kube-cm.labels" . | nindent 8}}
        {{- include "karmada.kube-cm.podLabels" . | nindent 8}}
    spec:
      {{- with .Values.kubeControllerManager.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $name }}-kube-controller-manager
      {{- with .Values.kubeControllerManager.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubeControllerManager.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubeControllerManager.tolerations}}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - command:
            - kube-controller-manager
            - --allocate-node-cidrs=true
            - --authentication-kubeconfig=/etc/kubeconfig
            - --authorization-kubeconfig=/etc/kubeconfig
            - --bind-address=0.0.0.0
            - --client-ca-file=/etc/karmada/pki/server-ca.crt
            - --cluster-cidr=10.244.0.0/16
            - --cluster-name=karmada
            - --cluster-signing-cert-file=/etc/karmada/pki/karmada.crt
            - --cluster-signing-key-file=/etc/karmada/pki/karmada.key
            - --controllers=namespace,garbagecollector,serviceaccount-token
            - --kubeconfig=/etc/kubeconfig
            - --leader-elect=true
            - --node-cidr-mask-size=24
            - --port=0
            - --root-ca-file=/etc/karmada/pki/server-ca.crt
            - --service-account-private-key-file=/etc/karmada/pki/karmada.key
            - --service-cluster-ip-range=10.96.0.0/12
            - --use-service-account-credentials=true
            - --v=5
          image: {{ .Values.kubeControllerManager.image.repository}}:{{ .Values.kubeControllerManager.image.tag | default "latest" }}
          imagePullPolicy: {{ .Values.kubeControllerManager.image.pullPolicy }}
          name: kube-controller-manager
          resources:
          {{- toYaml .Values.kubeControllerManager.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/karmada/pki
              name: apisever-cert
              readOnly: true
            {{- include "karmada.kubeconfig.volumeMount" . | nindent 12}}
      priorityClassName: system-node-critical
      volumes:
        - name: apisever-cert
          secret:
            secretName: {{ $name }}-cert
        {{- include "karmada.kubeconfig.volume" . | nindent 8}}
{{- end }}
