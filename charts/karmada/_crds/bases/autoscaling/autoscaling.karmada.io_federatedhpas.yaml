---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: federatedhpas.autoscaling.karmada.io
spec:
  group: autoscaling.karmada.io
  names:
    categories:
    - karmada-io
    kind: FederatedHPA
    listKind: FederatedHPAList
    plural: federatedhpas
    shortNames:
    - fhpa
    singular: federatedhpa
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.scaleTargetRef.kind
      name: REFERENCE-KIND
      type: string
    - jsonPath: .spec.scaleTargetRef.name
      name: REFERENCE-NAME
      type: string
    - jsonPath: .spec.minReplicas
      name: MINPODS
      type: integer
    - jsonPath: .spec.maxReplicas
      name: MAXPODS
      type: integer
    - jsonPath: .status.currentReplicas
      name: REPLICAS
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FederatedHPA is centralized HPA that can aggregate the metrics
          in multiple clusters. When the system load increases, it will query the
          metrics from multiple clusters and scales up the replicas. When the system
          load decreases, it will query the metrics from multiple clusters and scales
          down the replicas. After the replicas are scaled up/down, karmada-scheduler
          will schedule the replicas based on the policy.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the FederatedHPA.
            properties:
              behavior:
                description: Behavior configures the scaling behavior of the target
                  in both Up and Down directions (scaleUp and scaleDown fields respectively).
                  If not set, the default HPAScalingRules for scale up and scale down
                  are used.
                properties:
                  scaleDown:
                    description: scaleDown is scaling policy for scaling Down. If
                      not set, the default value is to allow to scale down to minReplicas
                      pods, with a 300 second stabilization window (i.e., the highest
                      recommendation for the last 300sec is used).
                    properties:
                      policies:
                        description: policies is a list of potential scaling polices
                          which can be used during scaling. At least one policy must
                          be specified, otherwise the HPAScalingRules will be discarded
                          as invalid
                        items:
                          description: HPAScalingPolicy is a single policy which must
                            hold true for a specified past interval.
                          properties:
                            periodSeconds:
                              description: periodSeconds specifies the window of time
                                for which the policy should hold true. PeriodSeconds
                                must be greater than zero and less than or equal to
                                1800 (30 min).
                              format: int32
                              type: integer
                            type:
                              description: type is used to specify the scaling policy.
                              type: string
                            value:
                              description: value contains the amount of change which
                                is permitted by the policy. It must be greater than
                                zero
                              format: int32
                              type: integer
                          required:
                          - periodSeconds
                          - type
                          - value
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      selectPolicy:
                        description: selectPolicy is used to specify which policy
                          should be used. If not set, the default value Max is used.
                        type: string
                      stabilizationWindowSeconds:
                        description: 'stabilizationWindowSeconds is the number of
                          seconds for which past recommendations should be considered
                          while scaling up or scaling down. StabilizationWindowSeconds
                          must be greater than or equal to zero and less than or equal
                          to 3600 (one hour). If not set, use the default values:
                          - For scale up: 0 (i.e. no stabilization is done). - For
                          scale down: 300 (i.e. the stabilization window is 300 seconds
                          long).'
                        format: int32
                        type: integer
                    type: object
                  scaleUp:
                    description: 'scaleUp is scaling policy for scaling Up. If not
                      set, the default value is the higher of: * increase no more
                      than 4 pods per 60 seconds * double the number of pods per 60
                      seconds No stabilization is used.'
                    properties:
                      policies:
                        description: policies is a list of potential scaling polices
                          which can be used during scaling. At least one policy must
                          be specified, otherwise the HPAScalingRules will be discarded
                          as invalid
                        items:
                          description: HPAScalingPolicy is a single policy which must
                            hold true for a specified past interval.
                          properties:
                            periodSeconds:
                              description: periodSeconds specifies the window of time
                                for which the policy should hold true. PeriodSeconds
                                must be greater than zero and less than or equal to
                                1800 (30 min).
                              format: int32
                              type: integer
                            type:
                              description: type is used to specify the scaling policy.
                              type: string
                            value:
                              description: value contains the amount of change which
                                is permitted by the policy. It must be greater than
                                zero
                              format: int32
                              type: integer
                          required:
                          - periodSeconds
                          - type
                          - value
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      selectPolicy:
                        description: selectPolicy is used to specify which policy
                          should be used. If not set, the default value Max is used.
                        type: string
                      stabilizationWindowSeconds:
                        description: 'stabilizationWindowSeconds is the number of
                          seconds for which past recommendations should be considered
                          while scaling up or scaling down. StabilizationWindowSeconds
                          must be greater than or equal to zero and less than or equal
                          to 3600 (one hour). If not set, use the default values:
                          - For scale up: 0 (i.e. no stabilization is done). - For
                          scale down: 300 (i.e. the stabilization window is 300 seconds
                          long).'
                        format: int32
                        type: integer
                    type: object
                type: object
              maxReplicas:
                description: MaxReplicas is the upper limit for the number of replicas
                  to which the autoscaler can scale up. It cannot be less that minReplicas.
                format: int32
                type: integer
              metrics:
                description: Metrics contains the specifications for which to use
                  to calculate the desired replica count (the maximum replica count
                  across all metrics will be used). The desired replica count is calculated
                  multiplying the ratio between the target value and the current value
                  by the current number of pods. Ergo, metrics used must decrease
                  as the pod count is increased, and vice-versa. See the individual
                  metric source types for more information about how each type of
                  metric must respond. If not set, the default metric will be set
                  to 80% average CPU utilization.
                items:
                  description: MetricSpec specifies how to scale based on a single
                    metric (only `type` and one other matching field should be set
                    at once).
                  properties:
                    containerResource:
                      description: containerResource refers to a resource metric (such
                        as those specified in requests and limits) known to Kubernetes
                        describing a single container in each pod of the current scale
                        target (e.g. CPU or memory). Such metrics are built in to
                        Kubernetes, and have special scaling options on top of those
                        available to normal per-pod metrics using the "pods" source.
                        This is an alpha feature and can be enabled by the HPAContainerMetrics
                        feature flag.
                      properties:
                        container:
                          description: container is the name of the container in the
                            pods of the scaling target
                          type: string
                        name:
                          description: name is the name of the resource in question.
                          type: string
                        target:
                          description: target specifies the target value for the given
                            metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value
                                of the average of the resource metric across all relevant
                                pods, represented as a percentage of the requested
                                value of the resource for the pods. Currently only
                                valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type
                                is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - container
                      - name
                      - target
                      type: object
                    external:
                      description: external refers to a global metric that is not
                        associated with any Kubernetes object. It allows autoscaling
                        based on information coming from components running outside
                        of cluster (for example length of queue in cloud messaging
                        service, or QPS from loadbalancer running outside of cluster).
                      properties:
                        metric:
                          description: metric identifies the target metric by name
                            and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of
                                a standard kubernetes label selector for the given
                                metric When set, it is passed as an additional parameter
                                to the metrics server for more specific metrics scoping.
                                When unset, just the metricName will be used to gather
                                metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        target:
                          description: target specifies the target value for the given
                            metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value
                                of the average of the resource metric across all relevant
                                pods, represented as a percentage of the requested
                                value of the resource for the pods. Currently only
                                valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type
                                is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - metric
                      - target
                      type: object
                    object:
                      description: object refers to a metric describing a single kubernetes
                        object (for example, hits-per-second on an Ingress object).
                      properties:
                        describedObject:
                          description: describedObject specifies the descriptions
                            of a object,such as kind,name apiVersion
                          properties:
                            apiVersion:
                              description: apiVersion is the API version of the referent
                              type: string
                            kind:
                              description: 'kind is the kind of the referent; More
                                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'name is the name of the referent; More
                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        metric:
                          description: metric identifies the target metric by name
                            and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of
                                a standard kubernetes label selector for the given
                                metric When set, it is passed as an additional parameter
                                to the metrics server for more specific metrics scoping.
                                When unset, just the metricName will be used to gather
                                metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        target:
                          description: target specifies the target value for the given
                            metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value
                                of the average of the resource metric across all relevant
                                pods, represented as a percentage of the requested
                                value of the resource for the pods. Currently only
                                valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type
                                is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - describedObject
                      - metric
                      - target
                      type: object
                    pods:
                      description: pods refers to a metric describing each pod in
                        the current scale target (for example, transactions-processed-per-second).  The
                        values will be averaged together before being compared to
                        the target value.
                      properties:
                        metric:
                          description: metric identifies the target metric by name
                            and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of
                                a standard kubernetes label selector for the given
                                metric When set, it is passed as an additional parameter
                                to the metrics server for more specific metrics scoping.
                                When unset, just the metricName will be used to gather
                                metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        target:
                          description: target specifies the target value for the given
                            metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value
                                of the average of the resource metric across all relevant
                                pods, represented as a percentage of the requested
                                value of the resource for the pods. Currently only
                                valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type
                                is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - metric
                      - target
                      type: object
                    resource:
                      description: resource refers to a resource metric (such as those
                        specified in requests and limits) known to Kubernetes describing
                        each pod in the current scale target (e.g. CPU or memory).
                        Such metrics are built in to Kubernetes, and have special
                        scaling options on top of those available to normal per-pod
                        metrics using the "pods" source.
                      properties:
                        name:
                          description: name is the name of the resource in question.
                          type: string
                        target:
                          description: target specifies the target value for the given
                            metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value
                                of the average of the resource metric across all relevant
                                pods, represented as a percentage of the requested
                                value of the resource for the pods. Currently only
                                valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type
                                is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - name
                      - target
                      type: object
                    type:
                      description: 'type is the type of metric source.  It should
                        be one of "ContainerResource", "External", "Object", "Pods"
                        or "Resource", each mapping to a matching field in the object.
                        Note: "ContainerResource" type is available on when the feature-gate
                        HPAContainerMetrics is enabled'
                      type: string
                  required:
                  - type
                  type: object
                type: array
              minReplicas:
                description: MinReplicas is the lower limit for the number of replicas
                  to which the autoscaler can scale down. It defaults to 1 pod.
                format: int32
                type: integer
              scaleTargetRef:
                description: ScaleTargetRef points to the target resource to scale,
                  and is used to the pods for which metrics should be collected, as
                  well as to actually change the replica count.
                properties:
                  apiVersion:
                    description: apiVersion is the API version of the referent
                    type: string
                  kind:
                    description: 'kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - maxReplicas
            - scaleTargetRef
            type: object
          status:
            description: Status is the current status of the FederatedHPA.
            properties:
              conditions:
                description: conditions is the set of conditions required for this
                  autoscaler to scale its target, and indicates whether or not those
                  conditions are met.
                items:
                  description: HorizontalPodAutoscalerCondition describes the state
                    of a HorizontalPodAutoscaler at a certain point.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another
                      format: date-time
                      type: string
                    message:
                      description: message is a human-readable explanation containing
                        details about the transition
                      type: string
                    reason:
                      description: reason is the reason for the condition's last transition.
                      type: string
                    status:
                      description: status is the status of the condition (True, False,
                        Unknown)
                      type: string
                    type:
                      description: type describes the current condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentMetrics:
                description: currentMetrics is the last read state of the metrics
                  used by this autoscaler.
                items:
                  description: MetricStatus describes the last-read state of a single
                    metric.
                  properties:
                    containerResource:
                      description: container resource refers to a resource metric
                        (such as those specified in requests and limits) known to
                        Kubernetes describing a single container in each pod in the
                        current scale target (e.g. CPU or memory). Such metrics are
                        built in to Kubernetes, and have special scaling options on
                        top of those available to normal per-pod metrics using the
                        "pods" source.
                      properties:
                        container:
                          description: container is the name of the container in the
                            pods of the scaling target
                          type: string
                        current:
                          description: current contains the current value for the
                            given metric
                          properties:
                            averageUtilization:
                              description: currentAverageUtilization is the current
                                value of the average of the resource metric across
                                all relevant pods, represented as a percentage of
                                the requested value of the resource for the pods.
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the current value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the current value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        name:
                          description: name is the name of the resource in question.
                          type: string
                      required:
                      - container
                      - current
                      - name
                      type: object
                    external:
                      description: external refers to a global metric that is not
                        associated with any Kubernetes object. It allows autoscaling
                        based on information coming from components running outside
                        of cluster (for example length of queue in cloud messaging
                        service, or QPS from loadbalancer running outside of cluster).
                      properties:
                        current:
                          description: current contains the current value for the
                            given metric
                          properties:
                            averageUtilization:
                              description: currentAverageUtilization is the current
                                value of the average of the resource metric across
                                all relevant pods, represented as a percentage of
                                the requested value of the resource for the pods.
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the current value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the current value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        metric:
                          description: metric identifies the target metric by name
                            and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of
                                a standard kubernetes label selector for the given
                                metric When set, it is passed as an additional parameter
                                to the metrics server for more specific metrics scoping.
                                When unset, just the metricName will be used to gather
                                metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                      required:
                      - current
                      - metric
                      type: object
                    object:
                      description: object refers to a metric describing a single kubernetes
                        object (for example, hits-per-second on an Ingress object).
                      properties:
                        current:
                          description: current contains the current value for the
                            given metric
                          properties:
                            averageUtilization:
                              description: currentAverageUtilization is the current
                                value of the average of the resource metric across
                                all relevant pods, represented as a percentage of
                                the requested value of the resource for the pods.
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the current value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the current value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        describedObject:
                          description: DescribedObject specifies the descriptions
                            of a object,such as kind,name apiVersion
                          properties:
                            apiVersion:
                              description: apiVersion is the API version of the referent
                              type: string
                            kind:
                              description: 'kind is the kind of the referent; More
                                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'name is the name of the referent; More
                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        metric:
                          description: metric identifies the target metric by name
                            and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of
                                a standard kubernetes label selector for the given
                                metric When set, it is passed as an additional parameter
                                to the metrics server for more specific metrics scoping.
                                When unset, just the metricName will be used to gather
                                metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                      required:
                      - current
                      - describedObject
                      - metric
                      type: object
                    pods:
                      description: pods refers to a metric describing each pod in
                        the current scale target (for example, transactions-processed-per-second).  The
                        values will be averaged together before being compared to
                        the target value.
                      properties:
                        current:
                          description: current contains the current value for the
                            given metric
                          properties:
                            averageUtilization:
                              description: currentAverageUtilization is the current
                                value of the average of the resource metric across
                                all relevant pods, represented as a percentage of
                                the requested value of the resource for the pods.
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the current value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the current value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        metric:
                          description: metric identifies the target metric by name
                            and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of
                                a standard kubernetes label selector for the given
                                metric When set, it is passed as an additional parameter
                                to the metrics server for more specific metrics scoping.
                                When unset, just the metricName will be used to gather
                                metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                      required:
                      - current
                      - metric
                      type: object
                    resource:
                      description: resource refers to a resource metric (such as those
                        specified in requests and limits) known to Kubernetes describing
                        each pod in the current scale target (e.g. CPU or memory).
                        Such metrics are built in to Kubernetes, and have special
                        scaling options on top of those available to normal per-pod
                        metrics using the "pods" source.
                      properties:
                        current:
                          description: current contains the current value for the
                            given metric
                          properties:
                            averageUtilization:
                              description: currentAverageUtilization is the current
                                value of the average of the resource metric across
                                all relevant pods, represented as a percentage of
                                the requested value of the resource for the pods.
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the current value of the
                                average of the metric across all relevant pods (as
                                a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the current value of the metric
                                (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        name:
                          description: name is the name of the resource in question.
                          type: string
                      required:
                      - current
                      - name
                      type: object
                    type:
                      description: 'type is the type of metric source.  It will be
                        one of "ContainerResource", "External", "Object", "Pods" or
                        "Resource", each corresponds to a matching field in the object.
                        Note: "ContainerResource" type is available on when the feature-gate
                        HPAContainerMetrics is enabled'
                      type: string
                  required:
                  - type
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              currentReplicas:
                description: currentReplicas is current number of replicas of pods
                  managed by this autoscaler, as last seen by the autoscaler.
                format: int32
                type: integer
              desiredReplicas:
                description: desiredReplicas is the desired number of replicas of
                  pods managed by this autoscaler, as last calculated by the autoscaler.
                format: int32
                type: integer
              lastScaleTime:
                description: lastScaleTime is the last time the HorizontalPodAutoscaler
                  scaled the number of pods, used by the autoscaler to control how
                  often the number of pods is changed.
                format: date-time
                type: string
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  by this autoscaler.
                format: int64
                type: integer
            required:
            - desiredReplicas
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
